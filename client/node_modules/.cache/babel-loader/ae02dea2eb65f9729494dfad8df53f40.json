{"ast":null,"code":"var _jsxFileName = \"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { useLog } from '../contexts/LogContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function LineChart() {\n  _s();\n\n  const {\n    log\n  } = useLog();\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\n  const labels = [];\n  const data = [];\n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  }; // setting the labels to the last 7 days\n\n  for (let i = 6; i >= 0; i--) {\n    let d = new Date();\n    d.setDate(d.getDate() - i);\n    labels.push(days[d.getDay()]);\n  } // setting data for each day\n\n\n  for (let i = 6; i >= 0; i--) {\n    let total = 0;\n    let day = new Date();\n    day.setDate(day.getDate() - i);\n    log.map(exercise => {\n      let logDate = new Date(parseInt(exercise.date));\n\n      if (day.getFullYear() == logDate.getFullYear() && day.getMonth() == logDate.getMonth() && day.getDate() == logDate.getDate()) {\n        total += exercise.duration;\n      }\n    });\n    console.log(total, day);\n    data.push(total);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Daily Activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Daily Activity (in minutes)',\n          borderColor: '#0d6efd',\n          backgroundColor: '#0d6efd',\n          data: data\n        }]\n      },\n      height: 122,\n      width: 300,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineChart, \"duu689MoZ5IK1dHR3AxUukjXgQQ=\", false, function () {\n  return [useLog];\n});\n\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/LineChart.js"],"names":["React","Card","Line","useLog","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","LineChart","log","days","labels","data","options","responsive","scales","y","beginAtZero","plugins","legend","display","i","d","Date","setDate","getDate","push","getDay","total","day","map","exercise","logDate","parseInt","date","getFullYear","getMonth","duration","console","datasets","label","borderColor","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;;AAUAP,OAAO,CAACQ,QAAR,CACEP,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,eAAe,SAASE,SAAT,GAAqB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAUZ,MAAM,EAAtB;AACA,QAAMa,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,KAAtC,EAA6C,KAA7C,CAAb;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDC,QAAAA,WAAW,EAAE;AADZ;AADG,KAFM;AAOdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AADD;AAPK,GAAhB,CALkC,CAmBlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACAD,IAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAcJ,CAAxB;AACAV,IAAAA,MAAM,CAACe,IAAP,CAAYhB,IAAI,CAACY,CAAC,CAACK,MAAF,EAAD,CAAhB;AACD,GAxBiC,CA0BlC;;;AACA,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIO,KAAK,GAAG,CAAZ;AACA,QAAIC,GAAG,GAAG,IAAIN,IAAJ,EAAV;AACAM,IAAAA,GAAG,CAACL,OAAJ,CAAYK,GAAG,CAACJ,OAAJ,KAAgBJ,CAA5B;AACAZ,IAAAA,GAAG,CAACqB,GAAJ,CAASC,QAAD,IAAc;AACpB,UAAIC,OAAO,GAAG,IAAIT,IAAJ,CAASU,QAAQ,CAACF,QAAQ,CAACG,IAAV,CAAjB,CAAd;;AACA,UACEL,GAAG,CAACM,WAAJ,MAAqBH,OAAO,CAACG,WAAR,EAArB,IACAN,GAAG,CAACO,QAAJ,MAAkBJ,OAAO,CAACI,QAAR,EADlB,IAEAP,GAAG,CAACJ,OAAJ,MAAiBO,OAAO,CAACP,OAAR,EAHnB,EAIE;AACAG,QAAAA,KAAK,IAAIG,QAAQ,CAACM,QAAlB;AACD;AACF,KATD;AAUAC,IAAAA,OAAO,CAAC7B,GAAR,CAAYmB,KAAZ,EAAmBC,GAAnB;AACAjB,IAAAA,IAAI,CAACc,IAAL,CAAUE,KAAV;AACD;;AAED,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJjB,QAAAA,MAAM,EAAEA,MADJ;AAEJ4B,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,6BADT;AAEEC,UAAAA,WAAW,EAAE,SAFf;AAGEC,UAAAA,eAAe,EAAE,SAHnB;AAIE9B,UAAAA,IAAI,EAAEA;AAJR,SADQ;AAFN,OADR;AAYE,MAAA,MAAM,EAAE,GAZV;AAaE,MAAA,KAAK,EAAE,GAbT;AAcE,MAAA,OAAO,EAAEC;AAdX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlEuBL,S;UACNX,M;;;KADMW,S","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { useLog } from '../contexts/LogContext';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function LineChart() {\n  const { log } = useLog();\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\n  const labels = [];\n  const data = [];\n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  // setting the labels to the last 7 days\n  for (let i = 6; i >= 0; i--) {\n    let d = new Date();\n    d.setDate(d.getDate() - i);\n    labels.push(days[d.getDay()]);\n  }\n\n  // setting data for each day\n  for (let i = 6; i >= 0; i--) {\n    let total = 0;\n    let day = new Date();\n    day.setDate(day.getDate() - i);\n    log.map((exercise) => {\n      let logDate = new Date(parseInt(exercise.date));\n      if (\n        day.getFullYear() == logDate.getFullYear() &&\n        day.getMonth() == logDate.getMonth() &&\n        day.getDate() == logDate.getDate()\n      ) {\n        total += exercise.duration;\n      }\n    });\n    console.log(total, day);\n    data.push(total);\n  }\n\n  return (\n    <Card>\n      <Card.Header>Daily Activity</Card.Header>\n      <Line\n        data={{\n          labels: labels,\n          datasets: [\n            {\n              label: 'Daily Activity (in minutes)',\n              borderColor: '#0d6efd',\n              backgroundColor: '#0d6efd',\n              data: data,\n            },\n          ],\n        }}\n        height={122}\n        width={300}\n        options={options}\n      />\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}