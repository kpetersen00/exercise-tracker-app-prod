{"ast":null,"code":"var _jsxFileName = \"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/DisplayExercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayExercises() {\n  _s();\n\n  const [error, setError] = useState('');\n  const {\n    getExercises,\n    log\n  } = useLog();\n  useEffect(() => {\n    loadExercises();\n  }, []);\n\n  async function loadExercises() {\n    try {\n      setError('');\n      await getExercises();\n    } catch (error) {\n      setError('error retrieving log');\n    }\n  }\n\n  function displayLog(exercises) {\n    if (!error) {\n      if (!exercises.length) return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"No Exercise have been logged\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n      exercises.length = 5;\n      return exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: exercise.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [exercise.duration, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: new Date(parseInt(exercise.date)).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this) // }\n      );\n    } else {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"There was an error retrieving the logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      height: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Recent Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), displayLog(log)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayExercises, \"XiFRqYh2ClIiB1+hjsGYe1m1cGI=\", false, function () {\n  return [useLog];\n});\n\n_c = DisplayExercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayExercises\");","map":{"version":3,"sources":["/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/DisplayExercises.js"],"names":["React","useEffect","useState","Card","Alert","useLog","DisplayExercises","error","setError","getExercises","log","loadExercises","displayLog","exercises","length","map","exercise","index","description","duration","Date","parseInt","date","toDateString","height","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAwBL,MAAM,EAApC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,aAAf,GAA+B;AAC7B,QAAI;AACFH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMC,YAAY,EAAlB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACD;AACF;;AAED,WAASI,UAAT,CAAoBC,SAApB,EAA+B;AAC7B,QAAI,CAACN,KAAL,EAAY;AACV,UAAI,CAACM,SAAS,CAACC,MAAf,EACE,oBAAO,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEFD,MAAAA,SAAS,CAACC,MAAV,GAAmB,CAAnB;AAEA,aAAOD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACnB,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaD,QAAQ,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,qBAAYF,QAAQ,CAACG,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,oBACG,IAAIC,IAAJ,CAASC,QAAQ,CAACL,QAAQ,CAACM,IAAV,CAAjB,EAAkCC,YAAlC;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAgBN,KAAhB;AAAA;AAAA;AAAA;AAAA,cADmB,CAON;AAPR,OAAP;AASD,KAfD,MAeO;AACL,0BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAb;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,UAAU,CAACF,GAAD,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7CuBJ,gB;UAEQD,M;;;KAFRC,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\n\nexport default function DisplayExercises() {\n  const [error, setError] = useState('');\n  const { getExercises, log } = useLog();\n  useEffect(() => {\n    loadExercises();\n  }, []);\n\n  async function loadExercises() {\n    try {\n      setError('');\n      await getExercises();\n    } catch (error) {\n      setError('error retrieving log');\n    }\n  }\n\n  function displayLog(exercises) {\n    if (!error) {\n      if (!exercises.length)\n        return <Alert variant='danger'>No Exercise have been logged</Alert>;\n\n      exercises.length = 5;\n\n      return exercises.map((exercise, index) => (\n        <Card.Body key={index}>\n          <Card.Title>{exercise.description}</Card.Title>\n          <Card.Text>{exercise.duration} min</Card.Text>\n          <Card.Text>\n            {new Date(parseInt(exercise.date)).toDateString()}\n          </Card.Text>\n        </Card.Body> // }\n      ));\n    } else {\n      return (\n        <Alert variant='danger'>There was an error retrieving the logs</Alert>\n      );\n    }\n  }\n\n  return (\n    <Card style={{ height: '100%', overflow: 'hidden' }}>\n      <Card.Header>Recent Exercises</Card.Header>\n      {displayLog(log)}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}