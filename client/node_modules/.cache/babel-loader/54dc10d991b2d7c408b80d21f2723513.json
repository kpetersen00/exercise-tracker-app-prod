{"ast":null,"code":"var _jsxFileName = \"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/AddExercise.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddExercise() {\n  _s();\n\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const {\n    logExercise\n  } = useLog();\n  const descRef = useRef();\n  const durationRef = useRef();\n  const dateRef = useRef();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      setError('');\n      setMessage('');\n      await logExercise(descRef.current.value, durationRef.current.value, dateRef.current.value);\n      setMessage('Exercise Logged');\n    } catch (error) {\n      setError('Failed to log exercise');\n    }\n\n    setLoading(false);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Container>\n    _jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Log Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"desc\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Description\",\n              type: \"text\",\n              name: \"description\",\n              ref: descRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"duration\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Duration\",\n              type: \"text\",\n              name: \"duration\",\n              ref: durationRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"date\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"date (yyyy-mm-dd)\",\n              type: \"text\",\n              name: \"date\",\n              ref: dateRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100 mt-2\",\n            type: \"submit\",\n            children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), \"Log Exercise\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) // {/* </Container> */}\n\n  );\n}\n\n_s(AddExercise, \"dGNpDRLlXteO3m/jjSxmlXJ6rik=\", false, function () {\n  return [useLog];\n});\n\n_c = AddExercise;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExercise\");","map":{"version":3,"sources":["/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/AddExercise.js"],"names":["React","useRef","useState","Card","Container","Form","Button","Spinner","Alert","useLog","AddExercise","error","setError","loading","setLoading","message","setMessage","logExercise","descRef","durationRef","dateRef","handleSubmit","e","preventDefault","current","value","setTimeout"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Card, Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\n\nexport default function AddExercise() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const { logExercise } = useLog();\n  const descRef = useRef();\n  const durationRef = useRef();\n  const dateRef = useRef();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      setError('');\n      setMessage('');\n      await logExercise(\n        descRef.current.value,\n        durationRef.current.value,\n        dateRef.current.value\n      );\n      setMessage('Exercise Logged');\n    } catch (error) {\n      setError('Failed to log exercise');\n    }\n    setLoading(false);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  }\n  return (\n    // <Container>\n    <Card>\n      <Card.Header>Log Exercise</Card.Header>\n      <Card.Body>\n        {error && <Alert variant='danger'>{error}</Alert>}\n        {message && <Alert variant='success'>{message}</Alert>}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group id='desc'>\n            <Form.Control\n              placeholder='Description'\n              type='text'\n              name='description'\n              ref={descRef}\n              required\n            />\n          </Form.Group>\n          <Form.Group id='duration'>\n            <Form.Control\n              placeholder='Duration'\n              type='text'\n              name='duration'\n              ref={durationRef}\n              required\n            />\n          </Form.Group>\n          <Form.Group id='date'>\n            <Form.Control\n              placeholder='date (yyyy-mm-dd)'\n              type='text'\n              name='date'\n              ref={dateRef}\n            />\n          </Form.Group>\n          <Button disabled={loading} className='w-100 mt-2' type='submit'>\n            {loading && (\n              <Spinner\n                as='span'\n                animation='border'\n                size='sm'\n                role='status'\n                aria-hidden='true'\n              />\n            )}\n            Log Exercise\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n    // {/* </Container> */}\n  );\n}\n"]},"metadata":{},"sourceType":"module"}