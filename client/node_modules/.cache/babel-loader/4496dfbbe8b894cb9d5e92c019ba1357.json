{"ast":null,"code":"var _jsxFileName = \"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    changeEmail,\n    changePassword\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const promises = [];\n    setError('');\n    setLoading(true);\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(changeEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(changePassword(passwordRef.current.value));\n    }\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError('passwords do not match');\n      setLoading(false);\n      setTimeout(() => {\n        setError('');\n      }, 3000);\n      return;\n    }\n\n    Promise.all(promises).then(() => {\n      navigate('/');\n    }).catch(() => {\n      setError('Faile to Update Profile');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100 mt-2\",\n            type: \"submit\",\n            children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this) : '', \"Update\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"kWi6Cfwl87dH5o6PvMGvFj6sa58=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/UpdateProfile.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","Spinner","useAuth","Link","useNavigate","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","changeEmail","changePassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","promises","current","value","email","push","setTimeout","Promise","all","then","catch","finally"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useNavigate } from 'react-router-dom';\n\nexport default function UpdateProfile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, changeEmail, changePassword } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const promises = [];\n    setError('');\n    setLoading(true);\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(changeEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(changePassword(passwordRef.current.value));\n    }\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError('passwords do not match');\n      setLoading(false);\n      setTimeout(() => {\n        setError('');\n      }, 3000);\n      return;\n    }\n    Promise.all(promises)\n      .then(() => {\n        navigate('/');\n      })\n      .catch(() => {\n        setError('Faile to Update Profile');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Update Profile</h2>\n          {error && <Alert variant='danger'>{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                ref={passwordRef}\n                placeholder='Leave blank to keep the same'\n              />\n            </Form.Group>\n            <Form.Group id='password-confirm'>\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type='password'\n                ref={passwordConfirmRef}\n                placeholder='Leave blank to keep the same'\n              />\n            </Form.Group>\n            <Button disabled={loading} className='w-100 mt-2' type='submit'>\n              {loading ? (\n                <Spinner\n                  as='span'\n                  animation='border'\n                  size='sm'\n                  role='status'\n                  aria-hidden='true'\n                />\n              ) : (\n                ''\n              )}\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className='w-100 text-center mt-2'>\n        <Link to='/'>Cancel</Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}