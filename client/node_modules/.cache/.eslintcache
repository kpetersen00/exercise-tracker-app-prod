[{"/Users/kyle-petersen/dev/exercise-log-prod/client/src/index.js":"1","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/App.js":"2","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/Navbar.js":"3","/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Dashboard.js":"4","/Users/kyle-petersen/dev/exercise-log-prod/client/src/contexts/AuthContext.js":"5","/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/UpdateProfile.js":"6","/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Signup.js":"7","/Users/kyle-petersen/dev/exercise-log-prod/client/src/contexts/LogContext.js":"8","/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Login.js":"9","/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/ForgotPassword.js":"10","/Users/kyle-petersen/dev/exercise-log-prod/client/src/routes/PrivateRoute.js":"11","/Users/kyle-petersen/dev/exercise-log-prod/client/src/routes/PublicRoute.js":"12","/Users/kyle-petersen/dev/exercise-log-prod/client/src/firebase.js":"13","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/DisplayExercises.js":"14","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/AddExercise.js":"15","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/LineChart.js":"16"},{"size":255,"mtime":1648531022356,"results":"17","hashOfConfig":"18"},{"size":2312,"mtime":1648530056678,"results":"19","hashOfConfig":"18"},{"size":1463,"mtime":1648530056679,"results":"20","hashOfConfig":"18"},{"size":820,"mtime":1648530056691,"results":"21","hashOfConfig":"18"},{"size":1476,"mtime":1648530056686,"results":"22","hashOfConfig":"18"},{"size":3016,"mtime":1648530056692,"results":"23","hashOfConfig":"18"},{"size":2391,"mtime":1648530056692,"results":"24","hashOfConfig":"18"},{"size":1034,"mtime":1648530056686,"results":"25","hashOfConfig":"18"},{"size":2091,"mtime":1648530056691,"results":"26","hashOfConfig":"18"},{"size":1665,"mtime":1648530056691,"results":"27","hashOfConfig":"18"},{"size":276,"mtime":1648530056699,"results":"28","hashOfConfig":"18"},{"size":271,"mtime":1648530056699,"results":"29","hashOfConfig":"18"},{"size":625,"mtime":1648613521702,"results":"30","hashOfConfig":"18"},{"size":1315,"mtime":1648530056678,"results":"31","hashOfConfig":"18"},{"size":2365,"mtime":1648530056678,"results":"32","hashOfConfig":"18"},{"size":1901,"mtime":1648612569479,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"15min0t",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"37"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"/Users/kyle-petersen/dev/exercise-log-prod/client/src/index.js",[],[],["88","89"],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/App.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/Navbar.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Dashboard.js",["90","91"],[],"import React from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport AddExercise from '../components/AddExercise';\nimport DisplayExercises from '../components/DisplayExercises';\nimport LineChart from '../components/LineChart';\n\nexport default function Dashboard() {\n  const { currentUser } = useAuth();\n\n  console.log(currentUser);\n\n  return (\n    <Container fluid='true'>\n      <Row fluid='true'>\n        <Col md={{ span: 9 }}>\n          <LineChart />\n          <AddExercise />\n        </Col>\n        <Col md={{ span: 3 }} className='h-100'>\n          <DisplayExercises />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n// chart of time exercised perday\n// form for adding exercise\n// todo list\n","/Users/kyle-petersen/dev/exercise-log-prod/client/src/contexts/AuthContext.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/UpdateProfile.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Signup.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/contexts/LogContext.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/Login.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/pages/ForgotPassword.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/routes/PrivateRoute.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/routes/PublicRoute.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/firebase.js",[],[],"/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/DisplayExercises.js",["92"],[],"import React, { useEffect, useState } from 'react';\nimport { Card, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\n\nexport default function DisplayExercises() {\n  const [error, setError] = useState('');\n  const { getExercises, log } = useLog();\n  useEffect(() => {\n    loadExercises();\n  }, []);\n\n  async function loadExercises() {\n    try {\n      setError('');\n      await getExercises();\n    } catch (error) {\n      setError('error retrieving log');\n    }\n  }\n\n  function displayLog(exercises) {\n    if (!error) {\n      if (!exercises.length)\n        return <Alert variant='danger'>No Exercise have been logged</Alert>;\n\n      exercises.length = 5;\n\n      return exercises.map((exercise, index) => (\n        <Card.Body key={index}>\n          <Card.Title>{exercise.description}</Card.Title>\n          <Card.Text>{exercise.duration} min</Card.Text>\n          <Card.Text>\n            {new Date(parseInt(exercise.date)).toDateString()}\n          </Card.Text>\n        </Card.Body> // }\n      ));\n    } else {\n      return (\n        <Alert variant='danger'>There was an error retrieving the logs</Alert>\n      );\n    }\n  }\n\n  return (\n    <Card style={{ height: '100%', overflow: 'hidden' }}>\n      <Card.Header>Recent Exercises</Card.Header>\n      {displayLog(log)}\n    </Card>\n  );\n}\n","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/AddExercise.js",["93"],[],"import React, { useRef, useState } from 'react';\nimport { Card, Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport { useLog } from '../contexts/LogContext';\n\nexport default function AddExercise() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const { logExercise } = useLog();\n  const descRef = useRef();\n  const durationRef = useRef();\n  const dateRef = useRef();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      setError('');\n      setMessage('');\n      await logExercise(\n        descRef.current.value,\n        durationRef.current.value,\n        dateRef.current.value\n      );\n      setMessage('Exercise Logged');\n    } catch (error) {\n      setError('Failed to log exercise');\n    }\n    setLoading(false);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  }\n  return (\n    // <Container>\n    <Card>\n      <Card.Header>Log Exercise</Card.Header>\n      <Card.Body>\n        {error && <Alert variant='danger'>{error}</Alert>}\n        {message && <Alert variant='success'>{message}</Alert>}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group id='desc'>\n            <Form.Control\n              placeholder='Description'\n              type='text'\n              name='description'\n              ref={descRef}\n              required\n            />\n          </Form.Group>\n          <Form.Group id='duration'>\n            <Form.Control\n              placeholder='Duration'\n              type='text'\n              name='duration'\n              ref={durationRef}\n              required\n            />\n          </Form.Group>\n          <Form.Group id='date'>\n            <Form.Control\n              placeholder='date (yyyy-mm-dd)'\n              type='text'\n              name='date'\n              ref={dateRef}\n            />\n          </Form.Group>\n          <Button disabled={loading} className='w-100 mt-2' type='submit'>\n            {loading && (\n              <Spinner\n                as='span'\n                animation='border'\n                size='sm'\n                role='status'\n                aria-hidden='true'\n              />\n            )}\n            Log Exercise\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n    // {/* </Container> */}\n  );\n}\n","/Users/kyle-petersen/dev/exercise-log-prod/client/src/components/LineChart.js",["94","95","96","97"],[],"import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { useLog } from '../contexts/LogContext';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function LineChart() {\n  const { log } = useLog();\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\n  const labels = [];\n  const data = [];\n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  // setting the labels to the last 7 days\n  for (let i = 6; i >= 0; i--) {\n    let d = new Date();\n    d.setDate(d.getDate() - i);\n    labels.push(days[d.getDay()]);\n  }\n\n  // setting data for each day\n  for (let i = 6; i >= 0; i--) {\n    let total = 0;\n    let day = new Date();\n    day.setDate(day.getDate() - i);\n    log.map((exercise) => {\n      let logDate = new Date(parseInt(exercise.date));\n      if (\n        day.getFullYear() == logDate.getFullYear() &&\n        day.getMonth() == logDate.getMonth() &&\n        day.getDate() == logDate.getDate()\n      ) {\n        total += exercise.duration;\n      }\n    });\n    // console.log(total, day);\n    data.push(total);\n  }\n\n  return (\n    <Card>\n      <Card.Header>Daily Activity</Card.Header>\n      <Line\n        data={{\n          labels: labels,\n          datasets: [\n            {\n              label: 'Daily Activity (in minutes)',\n              borderColor: '#0d6efd',\n              backgroundColor: '#0d6efd',\n              data: data,\n            },\n          ],\n        }}\n        height={122}\n        width={300}\n        options={options}\n      />\n    </Card>\n  );\n}\n",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"108","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":10,"column":6,"nodeType":"111","endLine":10,"endColumn":8,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":2,"column":16,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":56,"column":24,"nodeType":"116","messageId":"117","endLine":56,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":59,"column":27,"nodeType":"120","messageId":"121","endLine":59,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":60,"column":24,"nodeType":"120","messageId":"121","endLine":60,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":61,"column":23,"nodeType":"120","messageId":"121","endLine":61,"endColumn":25},{"ruleId":"100","replacedBy":"122"},{"ruleId":"102","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadExercises'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [loadExercises]",{"range":"129","text":"130"},[324,326],"[loadExercises]"]